name: UiPath Pack
description: 'Packs all UiPath projects within a repository into .nupkg packages for deployment by other actions. Optional behavior: Pack specified paths only'
inputs:
  projectFilePaths:
    description: 'Relative paths to projecct.json files. Used for passing explicit paths to project files to perform analysis. Can be used as multi-line inputs'
    required: false
  orchestratorUrl: 
    description: 'Orchestrator instance URL'
    default: "https://cloud.uipath.com/"
    required: false
  orchestratorTenant:
    description: 'Tenant on the Orchestrator instance'
    required: true
  orchestratorFolder:
    description: 'Folder path in modern folder setup'
    required: true
  orchestratorApplicationId:
    description: 'Orchestrator Application ID for external applicaiton in Orchestrator'
    required: true
  orchestratorApplicationSecret:
    description: 'Application Secret for external application in Orchestrator'
    required: true
  orchestratorApplicationScope:
    description: 'Application scope for determining accesses of External Application'
    default: "OR.Assets OR.BackgroundTasks OR.Execution OR.Folders OR.Jobs OR.Machines.Read OR.Monitoring OR.Robots.Read OR.Settings.Read OR.TestSets OR.TestSetExecutions OR.TestSetSchedules OR.Users.Read"
    required: false
  orchestratorLogicalName:
    description: 'Logical name for Orchestrator instance'
    required: true
  projectVersion:
    description: 'Project version for the generated package. Should be based on tag in GitHub'
    required: true
  releaseNotes:
    description: 'Release notes for the package'
    required: false
outputs:
  packagesPath:
    description: 'Folder containing the generated packages'
    value: ${{ steps.pack.outputs.packagesPath }}

runs:
  using: "composite"
  steps:
    - id: pack
      name: Pack
      shell: bash
      run: |
        packages="${GITHUB_WORKSPACE}/packages"
        echo "packagesPath=$packages" >> $GITHUB_OUTPUT

        if [ -z "${{ inputs.projectFilePaths }}" ]; then
          echo "Scanning full repository directory for project.json files"
          projectJsonFiles=$(find "${GITHUB_WORKSPACE}" -type f -name "project.json")
        else
          echo "Getting full path for files given as inputs"
          projectJsonFiles=$(echo "${{ inputs.projectFilePaths }}" | tr '\r\n' '\n' | sed '/^\s*$/d')
        fi

        repoUrl="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"

        for p in $projectJsonFiles; do
          project=$(realpath "$p")
          uipcli package pack "$project" \
            --output "$packages" \
            --libraryOrchestratorUrl "${{ inputs.orchestratorUrl }}" \
            --libraryOrchestratorTenant "${{ inputs.orchestratorTenant }}" \
            --libraryOrchestratorAccountForApp "${{ inputs.orchestratorLogicalName }}" \
            --libraryOrchestratorApplicationId "${{ inputs.orchestratorApplicationId }}" \
            --libraryOrchestratorApplicationSecret "${{ inputs.orchestratorApplicationSecret }}" \
            --libraryOrchestratorApplicationScope "${{ inputs.orchestratorApplicationScope }}" \
            --libraryOrchestratorFolder "${{ inputs.orchestratorFolder }}" \
            --releaseNotes "${{ inputs.releaseNotes }}" \
            --version "${{ inputs.projectVersion }}" \
            -l en-US \
            --repositoryUrl "$repoUrl" \
            --repositoryCommit "$GITHUB_SHA" \
            --repositoryBranch "$GITHUB_REF_NAME" \
            --repositoryType git

          if [ $? -ne 0 ]; then
            echo "Pack Failed"
            exit 1
          fi
        done

    - id: step-summary
      if: always()
      name: Step Summary
      shell: bash
      run: |
        echo "### Generated packages: " >> $GITHUB_STEP_SUMMARY

        packages=$(find "${{ steps.pack.outputs.packagesPath }}" -type f -name "*.nupkg")
        for package in $packages; do
          echo ":package: $(basename "$package")" >> $GITHUB_STEP_SUMMARY
        done





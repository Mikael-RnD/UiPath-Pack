name: 'UiPath Pack'
description: 'Analyzes and packs all UiPath projects within the repository it runs in. Analyze uses UiPath Workflow Analyzer and will cause the job to stop on Rule Violationes.'
inputs:
  orchestratorUrl: 
    description: 'Orchestrator instance URL'
    required: true
  orchestratorTenant:
    description: 'Tenant on the Orchestrator instance'
    required: true
  orchestratorFolder:
    description: 'Folder path in modern folder setup'
    required: true
  orchestratorUsername:
    description: 'Account for authenticating to Orchestrator'
    required: true
  orchestratorPassword:
    description: 'Password for the Orchestrator account'
    required: true
  projectVersion:
    description: 'Optional project version tag. Defaults to autoversion otherwise'
    required: false
    default: ""

runs:
  using: "composite"
  steps:
  # test
    - name: Analyze
      shell: pwsh
      run: |
        $projectList = Get-ChildItem -Path ${{ github.workspace }} -Recurse -Filter project.json -File
        if($projectList.Count -gt 0)
        {
        foreach($project in $projectList)
          {
            & "C:\\uipathcli\\lib\\net461\\uipcli.exe" package analyze "$($project.FullName)" --stopOnRuleViolation --ignoredRules ST-SEC-008 --orchestratorUrl ${{ inputs.orchestratorUrl }} --orchestratorTenant ${{ inputs.OrchestratorTenant }} --orchestratorUsername ${{ inputs.orchestratorUsername }} --orchestratorPassword ${{ inputs.orchestratorPassword }} --orchestratorFolder ${{ inputs.orchestratorFolder }}          
          }
        }
        else
        {
          exit -1
        }
      
    - name: Pack
      shell: pwsh
      run: | 
        $projectVersion = ${{ inputs.projectVersion }}
        $versioningArg = ""
        if([string]::IsNullOrEmpty($projectVersion))
        {
          Write-Host "Auto-versioning"
          $versioningArg = "--autoVersion"
        }
        else
        {
          Write-Host "Version ${{ inputs.projectVersion }}"
          $versioningArg = "--version ${{ inputs.projectVersion }}"
        }

        foreach($project in Get-ChildItem -Path ${{ github.workspace }}] -Recurse -Filter project.json -File)
        {
          # Add authentication here
          & "C:\\uipathcli\\lib\\net461\\uipcli.exe" package pack "$($project.FullName)" -o "${{ github.workspace }}/output" $versioningArg -l en-US
        }

#        ${{ github.action_path }}/pack-uipath-projects.ps1 ${{ github.workspace }}
